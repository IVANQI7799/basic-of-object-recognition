https://towardsdatascience.com/r-cnn-fast-r-cnn-faster-r-cnn-yolo-object-detection-algorithms-36d53571365e
您无法通过构建标准卷积网络（然后是完全连接的层）来处理此问题的主要原因是，输出层的长度是可变的 - 不是恒定的，这是因为感兴趣的对象的发生次数没有固定。解决这个
问题的一个自然的方法是从图像中取出不同感兴趣的区域，并使用 CNN 对该区域内对象的存在进行分类。这种方法的问题在于，感兴趣的对象可能在图像中具有不同的空间位置和
不同的纵横比。因此，您必须选择大量的区域，这可能会计算爆炸。因此，已经开发了R-CNN、YOLO等算法来查找这些事件并快速找到它们。
https://miro.medium.com/max/1400/1*95lJePt-70PH3PoVfz2yYQ.png

R-CNN
为了绕过选择大量区域的问题，Ross Girshick 等人。提出了一种方法，我们使用选择性搜索从图像中仅提取 2000 个区域，他将它们称为区域建议。因此，现在，您不必尝试对
大量区域进行分类，而只需处理 2000 个区域即可。这 2000 个区域提议是使用下面写的选择性搜索算法生成。
思路：
选择性搜索
1. 生成初始子分割，我们生成很多候选区域
2. 使用贪心算法将相似区域递归组合成更大的区域
3. 使用生成的区域产生最终候选区域建议
https://miro.medium.com/max/3000/1*REPHY47zAyzgbNKC6zlvBQ.png

要了解更多有关选择性搜索算法的知识，请按照此链接。这些 2000 个候选区域建议被扭曲成一个正方形，并输入到一个CNN中，该网络产生 4096 维特征矢量作为输
出。CNN 充当功能提取器，输出密集层由从图像中提取的特征组成，提取的特征被输入 SVM 以分类该候选区域提案中对象的存在。除了预测区域建议中对
象的存在外，该算法还预测了四个偏移值值，以提高边界框的精度。例如，如果区域建议，该算法会预测一个人的存在，但该区域提案中该人员的脸部可能已减半。因
此，偏移值有助于调整区域提案的界限框。

R-CNN的问题：
训练网络仍然需要大量时间，因为您必须对每张图像 2000 个区域建议进行分类。
它无法实时实现，因为每个测试图像需要大约 47 秒。
选择性搜索算法是一种固定算法。因此，在那个阶段没有发生任何学习。这可能会导致生成糟糕的候选区域提议

Fast-RCNN:
上一篇论文（R-CNN）的同一作者解决了R-CNN构建更快的对象检测算法的一些缺点，它被称为快速R-CNN。该方法类似于 R-CNN 算法。但是，我们不是将区域建议馈送给 CNN，而是将
输入图像馈送给 CNN 以生成一个汇总功能图。从卷积特征图中，我们识别建议的区域并将其扭曲成正方形，通过使用 RoI 池层，
我们将它们重塑为固定大小，以便将其输入到完全连接的层中。从 RoI 功能矢量，我们使用soft max来预测建议区域的类别以及边界框的偏移值。

"快速 R-CNN"比 R-CNN 快的原因是您不必每次都向汇总神经网络提供 2000 个区域建议。相反，卷积操作每张图像只执行一次，并且从中生成一张特征图。

从上述图表中，您可以推断Fast R-CNN 在 R-CNN的培训和测试中速度明显加快。当您查看快速 R-CNN 在测试期间的性能时，包括区域建议与不使用区域建议相比，算法明显减
慢。因此，区域建议成为影响其性能的Fast R-CNN 算法的瓶颈。

Faster-RCNN:
而不是使用特征图上的选择性搜索算法来识别区域建议，而是使用单独的网络来预测区域建议。然后使用 RoI 池层对预测区域建议进行重塑，然后用于对建议区域内的图像进行
分类并预测边界框的偏移值。
速度快很多，因此，它甚至可用于实时对象检测。


YOLO：
所有以前的对象检测算法都使用区域对图像中的对象进行本地化。网络不查看完整图像。相反，图像中具有高概率包含对象的部分。YOLO 或"您只看一次"是一种对象检测算法，与
上面看到的基于区域的算法大不相同。在 YOLO 中，单个卷积网络预测这些框的边界框和类概率。
YOLO 的工作原理是，我们拍摄图像并将其拆分为 SxS 网格，在每个网格中，我们取入 m 边界框。对于每个边界框，网络为边界框输出类概率和偏移值。选择具有高于阈值的类概
率的边界框，并用于定位图像中的对象。
YOLO 比其他对象检测算法的震级（每秒 45 帧）快。YOLO 算法的局限性在于它与图像中的小物体斗争，例如，它可能难以检测到一群鸟。这是由于算法的空间限制。






